@use "sass:map";
@use "sass:color";
@use "tools" as *;

.text-center {
  text-align: center;
}

.text-larger {
  font-size: $font-size-xl * 2;
}
.text-large {
  font-size: $font-size-xl * 1.5;
}

.text-bold {
  font-weight: bold;
}

.d-block {
  display: block !important;
}

.d-inline-block {
  display: inline-block !important;
}

.d-flex {
  display: flex !important;
}

.d-none {
  display: none !important;
}

.ltr {
  display: inline-block;
  direction: ltr;
}

@include make-colors("bg") using ($name, $color) {
  background-color: $color !important;
  // color: if($color == $light-color, map.get($colors-reverse, "light"), $white) !important;
  color: if(color.lightness($color) >= 50%, map.get($colors-reverse, $name), $white) !important;
}

@include make-colors("text") using ($name, $color) {
  color: $color !important;
}

.border-radius {
  border-radius: $radius-width;
}

.underline::after {
  content: "";
  width: 150px;
  height: 3px;
  display: block;
  background: $primary-color;
  margin-top: $gutter-md;
}

.uppercase {
  text-transform: uppercase;
}

.no-gutters {
  padding: 0 !important;
}

.stretched-link::after {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 1;
  pointer-events: auto;
  content: "";
  background-color: rgba(0,0,0,0);
}

.overlay-img {
  @include position($zIndex: -1);
  background-size: cover;
  background-position: center;
  &::before {
    @include position;
    background-color: $overlay-bg;
  }
  .img-fill & {
    height: calc(100% + $navbar-height);
    top: -$navbar-height;
  }
}
.overlay-bg {
  // &::before {
  @include position($zIndex: 0);
  overflow: hidden;
  background-color: $overlay-bg;
  opacity: 0;
  @include transition(opacity);
  // }
  &:hover {
    opacity: 1;
  }
}

.heading {
  position: relative;
  padding: $gutter-xl 0;
  text-align: center;
  .overlay-img::before {
    background-color: $heading-overlay-bg;
  }
}

#to-up {
  // display: none;
  @include position($to-up-size, $to-up-size, fixed, 80%, 5%, $zIndex-to-up);
  @include media-down("xs") {
    #{$left-dir}: 15px;
  }
  border-radius: $to-up-radius;
  box-shadow: 0 3px 5px 0px color.scale($black, $alpha: -80%);
  line-height: $to-up-size;
  .fas {
    color: $dark-color;
    position: relative;
    @include transition(color, $delay: 0.1s);
  }
  &::after {
    border-radius: $to-up-radius;
    background: $dark-color;
    transform: scaleY(0);
    transform-origin: 50% 100%;
    @include transition(transform, 0.3s, ease-out, 0.1s);
  }
  &:hover {
    .fas {
      color: $white;
      animation: hvr-icon-up 0.3s ease-out;
    }
    &::after {
      transform: scaleY(1);
    }
  }
}
