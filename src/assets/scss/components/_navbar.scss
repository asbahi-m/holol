@use "sass:color";
@use "../tools" as *;

// navbar + [navbar-light | navbar-primary | navbar-secondary]
//      => navbar-brand
//      => navbar-toggle
//      => navbar-nav + collapse
//              => nav-item [optional]
//                    => nav-link

// Navbar Variables
$navbar-padding: $gutter-lg !default;
$toggle-size: 40px !default;
$toggle-media: "md" !default;
$collapse-width: 200px !default;
$collapse-link-padding: $gutter-base !default;
$collapse-color: $secondary-color !default;
$collapse-bg: $primary-color !default;
$collapse-link-border: 1px solid color.scale($collapse-bg, $lightness: 40%) !default;
$fixed-color: $secondary-color !default;
$fixed-bg: color.scale($primary-color, $lightness: 90%) !default;

.navbar {
  height: $navbar-height;
  padding-top: $navbar-padding;
  padding-bottom: $navbar-padding;
  position: relative;
  z-index: 1;
  @extend %flex-center;
  > .container {
    height: 100%;
    @extend %flex-center;
  }
  .navbar-brand {
    height: 100%;
    font-size: $font-size-md;
    font-weight: bold;
    padding-#{$right-dir}: $navbar-padding;
    img {
      max-height: 100%;
      @include media-down("xs") {
        max-width: 100%;
      }
    }
  }
  .navbar-toggle {
    display: none;
    @include media-down($toggle-media) {
      display: block;
      height: $toggle-size;
      width: $toggle-size;
      margin-#{$left-dir}: auto;
      border: 1px solid $collapse-bg;
      line-height: 1;
      text-align: center;
      font-size: $font-size-md;
      color: $white;
      background-color: $collapse-bg;
      @include transition;
      &:hover:not(.active) {
        background-color: color-hvr($collapse-bg);
      }
      &.active {
        background-color: $secondary-color;
        color: $collapse-bg;
      }
    }
  }
  .navbar-nav {
    margin-#{$left-dir}: auto;
    display: flex;
    .nav-link {
      position: relative;
      display: block;
      &.active::after {
        @include position(0, 0, $top: calc(50% - 7px), $left: 7px);
        border: 7px solid transparent;
      }
      &:hover:not(.active) {
        transform: translateY(-8px);
      }
    }
  }

  // Formating Fixed Navbar
  &.fixed {
    @include position(
      $height: $navbar-height,
      $position: fixed,
      $zIndex: $zIndex-fixed
    );
    @include media-max-height() {
      height: $navbar-height - 70;
    }
    background-color: $fixed-bg;
    color: $fixed-color !important;
    .navbar-brand {
      color: $primary-color !important;
    }
    .nav-link:hover:not(.active) {
      color: color-hvr($fixed-color) !important;
    }
    .nav-link.active::after {
      border-#{$left-dir}-color: color-hvr($fixed-color) !important;
    }
  }

  // Formating Collapse Navbar when Screen max-width: 767.98px
  .collapse {
    @include media-down($toggle-media) {
      flex-direction: column;
      @include position(
        auto,
        0,
        $top: calc(100% - $navbar-padding),
        $left: 100%,
        $zIndex: $zIndex-navbar
      );
      overflow: hidden;
      opacity: 0;
      color: $collapse-color !important;
      background: $collapse-bg !important;
      white-space: nowrap;
      @include transition;
      &.show {
        width: $collapse-width;
        #{$left-dir}: calc(100% - $collapse-width);
        opacity: 1;
      }
      .nav-item {
        border-bottom: $collapse-link-border;
      }
      .nav-link {
        position: relative;
        padding-top: $collapse-link-padding;
        padding-bottom: $collapse-link-padding;
        border-bottom: $collapse-link-border;
        z-index: 1;
        &::before {
          content: "";
          height: 100%;
          width: 0;
          position: absolute;
          top: 0;
          #{$right-dir}: 0;
          z-index: -1;
          background: color.scale($collapse-bg, $lightness: 40%);
          transition: width 0.5s;
        }
        &:hover:not(.active) {
          color: color-hvr($collapse-color) !important;
          transform: none;
          &::before {
            width: 100%;
          }
        }
        &.active {
          color: inherit;
          &::after {
            border-#{$left-dir}-color: color-hvr($collapse-color) !important;
          }
        }
      }
    }
  }
}

// Formating Navbar Classe Colors
@include make-colors("navbar") using ($color) {
  color: $color !important;
  .nav-link:hover:not(.active) {
    color: color-hvr($color) !important;
  }
  .nav-link.active::after {
    border-#{$left-dir}-color: $color;
  }
}
